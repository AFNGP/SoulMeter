// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SWPLOTINFO_SOULMETERFBS_HISTORY_H_
#define FLATBUFFERS_GENERATED_SWPLOTINFO_SOULMETERFBS_HISTORY_H_

#include "flatbuffers/flatbuffers.h"

#include "STRUCT_.h"

namespace SoulMeterFBS {
namespace History {

struct _tPlotInfo;
struct _tPlotInfoBuilder;

struct _tMetaInfo;
struct _tMetaInfoBuilder;

struct _tPlotInfo FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef _tPlotInfoBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT__META = 4,
    VT__DPS_LIST = 6,
    VT__DPS_TIME_LIST = 8,
    VT__AB_LIST = 10,
    VT__AB_TIME_LIST = 12,
    VT__BD_LIST = 14,
    VT__BD_TIME_LIST = 16,
    VT__JQ_LIST = 18,
    VT__JQ_TIME_LIST = 20,
    VT__BOSS_HP_LIST = 22,
    VT__BOSS_TIME_LIST = 24
  };
  const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tMetaInfo>> *_meta() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tMetaInfo>> *>(VT__META);
  }
  const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *_dps_list() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *>(VT__DPS_LIST);
  }
  const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *_dps_time_list() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *>(VT__DPS_TIME_LIST);
  }
  const flatbuffers::Vector<double> *_ab_list() const {
    return GetPointer<const flatbuffers::Vector<double> *>(VT__AB_LIST);
  }
  const flatbuffers::Vector<double> *_ab_time_list() const {
    return GetPointer<const flatbuffers::Vector<double> *>(VT__AB_TIME_LIST);
  }
  const flatbuffers::Vector<double> *_bd_list() const {
    return GetPointer<const flatbuffers::Vector<double> *>(VT__BD_LIST);
  }
  const flatbuffers::Vector<double> *_bd_time_list() const {
    return GetPointer<const flatbuffers::Vector<double> *>(VT__BD_TIME_LIST);
  }
  const flatbuffers::Vector<double> *_jq_list() const {
    return GetPointer<const flatbuffers::Vector<double> *>(VT__JQ_LIST);
  }
  const flatbuffers::Vector<double> *_jq_time_list() const {
    return GetPointer<const flatbuffers::Vector<double> *>(VT__JQ_TIME_LIST);
  }
  const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *_boss_hp_list() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *>(VT__BOSS_HP_LIST);
  }
  const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *_boss_time_list() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *>(VT__BOSS_TIME_LIST);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT__META) &&
           verifier.VerifyVector(_meta()) &&
           verifier.VerifyVectorOfTables(_meta()) &&
           VerifyOffset(verifier, VT__DPS_LIST) &&
           verifier.VerifyVector(_dps_list()) &&
           verifier.VerifyVectorOfTables(_dps_list()) &&
           VerifyOffset(verifier, VT__DPS_TIME_LIST) &&
           verifier.VerifyVector(_dps_time_list()) &&
           verifier.VerifyVectorOfTables(_dps_time_list()) &&
           VerifyOffset(verifier, VT__AB_LIST) &&
           verifier.VerifyVector(_ab_list()) &&
           VerifyOffset(verifier, VT__AB_TIME_LIST) &&
           verifier.VerifyVector(_ab_time_list()) &&
           VerifyOffset(verifier, VT__BD_LIST) &&
           verifier.VerifyVector(_bd_list()) &&
           VerifyOffset(verifier, VT__BD_TIME_LIST) &&
           verifier.VerifyVector(_bd_time_list()) &&
           VerifyOffset(verifier, VT__JQ_LIST) &&
           verifier.VerifyVector(_jq_list()) &&
           VerifyOffset(verifier, VT__JQ_TIME_LIST) &&
           verifier.VerifyVector(_jq_time_list()) &&
           VerifyOffset(verifier, VT__BOSS_HP_LIST) &&
           verifier.VerifyVector(_boss_hp_list()) &&
           verifier.VerifyVectorOfTables(_boss_hp_list()) &&
           VerifyOffset(verifier, VT__BOSS_TIME_LIST) &&
           verifier.VerifyVector(_boss_time_list()) &&
           verifier.VerifyVectorOfTables(_boss_time_list()) &&
           verifier.EndTable();
  }
};

struct _tPlotInfoBuilder {
  typedef _tPlotInfo Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add__meta(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tMetaInfo>>> _meta) {
    fbb_.AddOffset(_tPlotInfo::VT__META, _meta);
  }
  void add__dps_list(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>> _dps_list) {
    fbb_.AddOffset(_tPlotInfo::VT__DPS_LIST, _dps_list);
  }
  void add__dps_time_list(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>> _dps_time_list) {
    fbb_.AddOffset(_tPlotInfo::VT__DPS_TIME_LIST, _dps_time_list);
  }
  void add__ab_list(flatbuffers::Offset<flatbuffers::Vector<double>> _ab_list) {
    fbb_.AddOffset(_tPlotInfo::VT__AB_LIST, _ab_list);
  }
  void add__ab_time_list(flatbuffers::Offset<flatbuffers::Vector<double>> _ab_time_list) {
    fbb_.AddOffset(_tPlotInfo::VT__AB_TIME_LIST, _ab_time_list);
  }
  void add__bd_list(flatbuffers::Offset<flatbuffers::Vector<double>> _bd_list) {
    fbb_.AddOffset(_tPlotInfo::VT__BD_LIST, _bd_list);
  }
  void add__bd_time_list(flatbuffers::Offset<flatbuffers::Vector<double>> _bd_time_list) {
    fbb_.AddOffset(_tPlotInfo::VT__BD_TIME_LIST, _bd_time_list);
  }
  void add__jq_list(flatbuffers::Offset<flatbuffers::Vector<double>> _jq_list) {
    fbb_.AddOffset(_tPlotInfo::VT__JQ_LIST, _jq_list);
  }
  void add__jq_time_list(flatbuffers::Offset<flatbuffers::Vector<double>> _jq_time_list) {
    fbb_.AddOffset(_tPlotInfo::VT__JQ_TIME_LIST, _jq_time_list);
  }
  void add__boss_hp_list(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>> _boss_hp_list) {
    fbb_.AddOffset(_tPlotInfo::VT__BOSS_HP_LIST, _boss_hp_list);
  }
  void add__boss_time_list(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>> _boss_time_list) {
    fbb_.AddOffset(_tPlotInfo::VT__BOSS_TIME_LIST, _boss_time_list);
  }
  explicit _tPlotInfoBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<_tPlotInfo> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<_tPlotInfo>(end);
    return o;
  }
};

inline flatbuffers::Offset<_tPlotInfo> Create_tPlotInfo(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tMetaInfo>>> _meta = 0,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>> _dps_list = 0,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>> _dps_time_list = 0,
    flatbuffers::Offset<flatbuffers::Vector<double>> _ab_list = 0,
    flatbuffers::Offset<flatbuffers::Vector<double>> _ab_time_list = 0,
    flatbuffers::Offset<flatbuffers::Vector<double>> _bd_list = 0,
    flatbuffers::Offset<flatbuffers::Vector<double>> _bd_time_list = 0,
    flatbuffers::Offset<flatbuffers::Vector<double>> _jq_list = 0,
    flatbuffers::Offset<flatbuffers::Vector<double>> _jq_time_list = 0,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>> _boss_hp_list = 0,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>> _boss_time_list = 0) {
  _tPlotInfoBuilder builder_(_fbb);
  builder_.add__boss_time_list(_boss_time_list);
  builder_.add__boss_hp_list(_boss_hp_list);
  builder_.add__jq_time_list(_jq_time_list);
  builder_.add__jq_list(_jq_list);
  builder_.add__bd_time_list(_bd_time_list);
  builder_.add__bd_list(_bd_list);
  builder_.add__ab_time_list(_ab_time_list);
  builder_.add__ab_list(_ab_list);
  builder_.add__dps_time_list(_dps_time_list);
  builder_.add__dps_list(_dps_list);
  builder_.add__meta(_meta);
  return builder_.Finish();
}

inline flatbuffers::Offset<_tPlotInfo> Create_tPlotInfoDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const std::vector<flatbuffers::Offset<SoulMeterFBS::History::_tMetaInfo>> *_meta = nullptr,
    const std::vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *_dps_list = nullptr,
    const std::vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *_dps_time_list = nullptr,
    const std::vector<double> *_ab_list = nullptr,
    const std::vector<double> *_ab_time_list = nullptr,
    const std::vector<double> *_bd_list = nullptr,
    const std::vector<double> *_bd_time_list = nullptr,
    const std::vector<double> *_jq_list = nullptr,
    const std::vector<double> *_jq_time_list = nullptr,
    const std::vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *_boss_hp_list = nullptr,
    const std::vector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>> *_boss_time_list = nullptr) {
  auto _meta__ = _meta ? _fbb.CreateVector<flatbuffers::Offset<SoulMeterFBS::History::_tMetaInfo>>(*_meta) : 0;
  auto _dps_list__ = _dps_list ? _fbb.CreateVector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>(*_dps_list) : 0;
  auto _dps_time_list__ = _dps_time_list ? _fbb.CreateVector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>(*_dps_time_list) : 0;
  auto _ab_list__ = _ab_list ? _fbb.CreateVector<double>(*_ab_list) : 0;
  auto _ab_time_list__ = _ab_time_list ? _fbb.CreateVector<double>(*_ab_time_list) : 0;
  auto _bd_list__ = _bd_list ? _fbb.CreateVector<double>(*_bd_list) : 0;
  auto _bd_time_list__ = _bd_time_list ? _fbb.CreateVector<double>(*_bd_time_list) : 0;
  auto _jq_list__ = _jq_list ? _fbb.CreateVector<double>(*_jq_list) : 0;
  auto _jq_time_list__ = _jq_time_list ? _fbb.CreateVector<double>(*_jq_time_list) : 0;
  auto _boss_hp_list__ = _boss_hp_list ? _fbb.CreateVector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>(*_boss_hp_list) : 0;
  auto _boss_time_list__ = _boss_time_list ? _fbb.CreateVector<flatbuffers::Offset<SoulMeterFBS::History::_tIntDoubleList>>(*_boss_time_list) : 0;
  return SoulMeterFBS::History::Create_tPlotInfo(
      _fbb,
      _meta__,
      _dps_list__,
      _dps_time_list__,
      _ab_list__,
      _ab_time_list__,
      _bd_list__,
      _bd_time_list__,
      _jq_list__,
      _jq_time_list__,
      _boss_hp_list__,
      _boss_time_list__);
}

struct _tMetaInfo FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef _tMetaInfoBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT__ID = 4,
    VT__NAME = 6
  };
  uint32_t _id() const {
    return GetField<uint32_t>(VT__ID, 0);
  }
  const flatbuffers::String *_name() const {
    return GetPointer<const flatbuffers::String *>(VT__NAME);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint32_t>(verifier, VT__ID) &&
           VerifyOffset(verifier, VT__NAME) &&
           verifier.VerifyString(_name()) &&
           verifier.EndTable();
  }
};

struct _tMetaInfoBuilder {
  typedef _tMetaInfo Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add__id(uint32_t _id) {
    fbb_.AddElement<uint32_t>(_tMetaInfo::VT__ID, _id, 0);
  }
  void add__name(flatbuffers::Offset<flatbuffers::String> _name) {
    fbb_.AddOffset(_tMetaInfo::VT__NAME, _name);
  }
  explicit _tMetaInfoBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<_tMetaInfo> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<_tMetaInfo>(end);
    return o;
  }
};

inline flatbuffers::Offset<_tMetaInfo> Create_tMetaInfo(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint32_t _id = 0,
    flatbuffers::Offset<flatbuffers::String> _name = 0) {
  _tMetaInfoBuilder builder_(_fbb);
  builder_.add__name(_name);
  builder_.add__id(_id);
  return builder_.Finish();
}

inline flatbuffers::Offset<_tMetaInfo> Create_tMetaInfoDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint32_t _id = 0,
    const char *_name = nullptr) {
  auto _name__ = _name ? _fbb.CreateString(_name) : 0;
  return SoulMeterFBS::History::Create_tMetaInfo(
      _fbb,
      _id,
      _name__);
}

inline const SoulMeterFBS::History::_tPlotInfo *Get_tPlotInfo(const void *buf) {
  return flatbuffers::GetRoot<SoulMeterFBS::History::_tPlotInfo>(buf);
}

inline const SoulMeterFBS::History::_tPlotInfo *GetSizePrefixed_tPlotInfo(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<SoulMeterFBS::History::_tPlotInfo>(buf);
}

inline bool Verify_tPlotInfoBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<SoulMeterFBS::History::_tPlotInfo>(nullptr);
}

inline bool VerifySizePrefixed_tPlotInfoBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<SoulMeterFBS::History::_tPlotInfo>(nullptr);
}

inline void Finish_tPlotInfoBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<SoulMeterFBS::History::_tPlotInfo> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixed_tPlotInfoBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<SoulMeterFBS::History::_tPlotInfo> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace History
}  // namespace SoulMeterFBS

#endif  // FLATBUFFERS_GENERATED_SWPLOTINFO_SOULMETERFBS_HISTORY_H_
